- name: sonarquep install 
  hosts: nginx-1
  become: true
  vars:
   POSTGRES_PASSWORD: "{{ lookup('env', 'POSTGRES_PASSWORD') }}"
  
  tasks:

#install and configure PostgreSQL database
  - name: Import the PostgreSQL repository key and Add the PostgreSQL repository
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop:
    - sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
    - wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null

    - name: Install PostgreSQL 
    apt:
      update_cache: true
      name: [postgresql , postgresql-contrib]

  - name: Configure PostgreSQL
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop: 
    - systemctl enable postgresql
    - sudo -u postgres psql
    - CREATE ROLE sonaruser WITH LOGIN ENCRYPTED PASSWORD '{{POSTGRES_PASSWORD}}';
    - CREATE DATABASE sonarqube;
    - GRANT ALL PRIVILEGES ON DATABASE sonarqube to sonaruser;
    - \q


  - name: install Install Java 17
    become: true
    apt:
      update_cache: true
      name: [wget, apt-transport-https, unzip , temurin-17-jdk]
       
  - name: Increase the virtual memory on the system for Elasticsearch to function
    ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: vm.max_map_count=262144
  
  - name: increase the file descriptors and threads that the sonarqube user can open
    ansible.builtin.lineinfile:
      path: /etc/security/limits.conf
      line: "{{item}}"
      state: present
      create: true
    loop:
        - sonarqube   -   nofile   65536
        - sonarqube   -   nproc    4096

        
  - name: Reboot the system to apply the changes.
    ansible.builtin.reboot:
     msg: "Rebooting machine in 5 seconds to apply the changes"

#install and configure sonarquebe
  - name: Install Sonarqube
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop: 
    - wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.0.65466.zip
    - unzip sonarqube-9.9.0.65466.zip -d /opt
    - mv /opt/sonarqube-9.9.0.65466 /opt/sonarqube
    - groupadd sonar
    - useradd -c "user to run SonarQube" -d /opt/sonarqube -g sonar sonar
    - chown sonar:sonar /opt/sonarqube -R

  - name: configure sonarqube server
    ansible.builtin.lineinfile:
      path: /opt/sonarqube/conf/sonar.properties  
      state: present
      regexp: "{{ item.search }}"  # Use the search string for matching
      line: "{{ item.line }}"  # The new line to be written
    loop:
        - { search: '#sonar.jdbc.username=', line: 'sonar.jdbc.username=sonaruser' }
        - { search: '#sonar.jdbc.password=', line: 'sonar.jdbc.password={{POSTGRES_PASSWORD}}' }
        - { search: '#sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube?currentSchema=my_schema', line: 'sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube' }

  - name: Create service for Sonarqube
    ansible.builtin.blockinfile:
      path: /etc/systemd/system/sonar.service
      create: true
      block: |
        [Unit]
        Description=SonarQube service
        After=syslog.target network.target

        [Service]
        Type=forking

        ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
        ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop

        User=sonar
        Group=sonar
        Restart=always

        LimitNOFILE=65536
        LimitNPROC=4096

        [Install]
        WantedBy=multi-user.target
  
  - name: Start Sonarqube and Enable service
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop: 
    -  systemctl start sonar
    - systemctl enable sonar
    - systemctl status sonar
    - tail -n 100 /opt/sonarqube/logs/sonar.log