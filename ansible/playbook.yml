- name: sonarquep install 
  hosts: nginx-1
  become: true
  vars:
   POSTGRES_PASSWORD: "{{ lookup('env', 'POSTGRES_PASSWORD') }}"
  
  tasks:
  - name: install wget, openjdk-17-jdk and unzip
    become: true
    apt:
      update_cache: true
      name: [wget,openjdk-17-jdk,unzip]


#install and configure PostgreSQL database
  - name: Import the PostgreSQL repository key and Add the PostgreSQL repository
    ansible.builtin.shell:
      chdir: /app
      cmd: '{{item}}'
    loop:
    - curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null
    - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

  - name: Install PostgreSQL 
    apt:
      update_cache: true
      name: [postgresql , postgresql-contrib]

  - name: Configure PostgreSQL
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop: 
    - sudo -u postgres psql
    - CREATE ROLE sonaruser WITH LOGIN ENCRYPTED PASSWORD '{{POSTGRES_PASSWORD}}';
    - CREATE DATABASE sonarqube;
    - GRANT ALL PRIVILEGES ON DATABASE sonarqube to sonaruser;
    - \q


#install and configure sonarquebe
  - name: Install Sonarqube
    ansible.builtin.shell:
      cmd: '{{item}}'
    loop: 
    - wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.6.1.59531.zip
    - unzip -q sonarqube-9.6.1.59531.zip
    - mv sonarqube-9.6.1.59531 /opt/sonarqube
    - rm sonarqube-9.6.1.59531.zip

  - name: Create SonarQube User
    ansible.builtin.user:
      name: sonarqube
      system: yes              
      create_home: no          
      group: yes              
      shell: /usr/sbin/nologin

  - name: Give Sonar user permissions to the /opt/sonarqube directory
    ansible.builtin.file:
        path: /opt/sonarqube
        owner: sonarqube
        group: sonarqube
        state: directory
        recurse: yes

  - name: configure sonarqube server
    ansible.builtin.lineinfile:
      path: /opt/sonarqube/conf/sonar.properties  
      state: present
      regexp: "{{ item.search }}"  # Use the search string for matching
      line: "{{ item.line }}"  # The new line to be written
    loop:
        - { search: '#sonar.jdbc.username=', line: 'sonar.jdbc.username=sonaruser' }
        - { search: '#sonar.jdbc.password=', line: 'sonar.jdbc.password={{POSTGRES_PASSWORD}}' }
        - { search: '#sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube?currentSchema=my_schema', line: 'sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonarqube' }
        - { search: '#sonar.web.javaAdditionalOpts=-server', line: 'sonar.web.javaAdditionalOpts=-server' }
        - { search: '#sonar.web.host=0.0.0.0', line: 'sonar.web.host=127.0.0.1' }
        - { search: '#sonar.web.port=9000', line: 'sonar.web.port=9000' }
        - { search: '#sonar.search.javaOpts=-Xmx512m -Xms512m -XX:MaxDirectMemorySize=256m -XX:+HeapDumpOnOutOfMemoryError', line: 'sonar.search.javaOpts=-Xmx512m -Xms512m -XX:MaxDirectMemorySize=256m -XX:+HeapDumpOnOutOfMemoryError' }
        
        
  - name: Increase the virtual memory on the system for Elasticsearch to function
    ansible.builtin.lineinfile:
      path: /etc/sysctl.conf
      line: "{{item}}"
    loop:
      - vm.max_map_count=524288
      - fs.file-max=131072

  - name: increase the file descriptors and threads that the sonarqube user can open
    ansible.builtin.lineinfile:
      path: /etc/security/limits.d/99-sonarqube.conf
      line: "{{item}}"
      state: present
      create: true
    loop:
      - sonarqube   -   nofile   131072
      - sonarqube   -   nproc    8192

  - name: Reboot the system to apply the changes.
    ansible.builtin.reboot:
      msg: "Rebooting machine in 5 seconds to apply the changes"

  - name: copy the systemd service file for Sonar
    ansible.builtin.copy:
      src: ./sonarqube.service
      dest: /etc/systemd/system/sonarqube.service